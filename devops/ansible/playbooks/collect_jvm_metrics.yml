---
- name: Create systemd jobs for scraping JVM heap and thread metrics
  hosts: monitoring_node
  become: true
  gather_facts: true

  vars:
    remote_asset_dir: /home/ubuntu/assets
    targets:
      - name: ec2.java-1
        host: ec2.java-1
        port: 8778
      - name: ec2.java-2
        host: ec2.java-2
        port: 8778
      - name: ec2.java-3
        host: ec2.java-3
        port: 8778

  tasks:

    - name: Make all .sh files in asset dir executable
      command: "find {{ remote_asset_dir }} -type f -name '*.sh' -exec chmod a+x {} +"
      args:
        chdir: "{{ remote_asset_dir }}"


    - name: Create systemd service units for each target (heap + threads)
      copy:
        dest: "/etc/systemd/system/{{ item.name }}-{{ metric }}.service"
        content: |
          [Unit]
          Description=Collect JVM {{ metric }} metrics from {{ item.host }}
          After=network.target

          [Service]
          Type=oneshot
          ExecStart={{ remote_asset_dir }}/scrape_jvm_{{ metric }}.sh {{ item.host }} {{ item.port }}
        mode: '0644'
      loop: "{{ targets | subelements(['heap','threads']) }}"
      loop_control:
        loop_var: combo
      vars:
        item: "{{ combo[0] }}"
        metric: "{{ combo[1] }}"


    - name: Create systemd timer units for each target (heap + threads)
      copy:
        dest: "/etc/systemd/system/{{ item.name }}-{{ metric }}.timer"
        content: |
          [Unit]
          Description=Timer for JVM {{ metric }} scraping from {{ item.host }}

          [Timer]
          OnBootSec=5s
          OnUnitActiveSec=5s
          Unit={{ item.name }}-{{ metric }}.service

          [Install]
          WantedBy=timers.target
        mode: '0644'
      loop: "{{ targets | subelements(['heap','threads']) }}"
      loop_control:
        loop_var: combo
      vars:
        item: "{{ combo[0] }}"
        metric: "{{ combo[1] }}"


    - name: Reload systemd daemon
      command: systemctl daemon-reexec


    - name: Enable and start all timers
      systemd:
        name: "{{ item.name }}-{{ metric }}.timer"
        enabled: true
        state: started
      loop: "{{ targets | subelements(['heap','threads']) }}"
      loop_control:
        loop_var: combo
      vars:
        item: "{{ combo[0] }}"
        metric: "{{ combo[1] }}"
